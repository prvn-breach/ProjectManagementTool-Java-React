[{"/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/index.js":"1","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/App.js":"2","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/reportWebVitals.js":"3","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/Dashboard.js":"4","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/Project/ProjectItem.js":"5","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/Layout/Header.js":"6","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/Project/CreateProjectButton.js":"7","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/Project/AddProject.js":"8","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/store.js":"9","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/reducers/index.js":"10","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/reducers/errorReducer.js":"11","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/actions/types.js":"12","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/actions/projectActions.js":"13","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/reducers/projectReducer.js":"14","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/Project/UpdateProject.js":"15","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/reducers/backlogReducer.js":"16","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/ProjectBacklog/ProjectBoard.js":"17","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/ProjectBacklog/ProjectTasks/AddProjectTask.js":"18","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/actions/backlogActions.js":"19","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/ProjectBacklog/Backlog.js":"20","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/ProjectBacklog/ProjectTasks/ProjectTask.js":"21","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/ProjectBacklog/ProjectTasks/UpdateProjectTask.js":"22"},{"size":510,"mtime":1609778407375,"results":"23","hashOfConfig":"24"},{"size":1510,"mtime":1611691982885,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1609778227013,"results":"26","hashOfConfig":"24"},{"size":1485,"mtime":1609949026107,"results":"27","hashOfConfig":"24"},{"size":2450,"mtime":1611682232473,"results":"28","hashOfConfig":"24"},{"size":1820,"mtime":1609782315124,"results":"29","hashOfConfig":"24"},{"size":309,"mtime":1609783542391,"results":"30","hashOfConfig":"24"},{"size":4359,"mtime":1609947123023,"results":"31","hashOfConfig":"24"},{"size":750,"mtime":1609868964444,"results":"32","hashOfConfig":"24"},{"size":304,"mtime":1611681278472,"results":"33","hashOfConfig":"24"},{"size":283,"mtime":1609871559726,"results":"34","hashOfConfig":"24"},{"size":355,"mtime":1611680775364,"results":"35","hashOfConfig":"24"},{"size":1081,"mtime":1611683646934,"results":"36","hashOfConfig":"24"},{"size":595,"mtime":1610029005221,"results":"37","hashOfConfig":"24"},{"size":5130,"mtime":1609951934490,"results":"38","hashOfConfig":"24"},{"size":781,"mtime":1611693476470,"results":"39","hashOfConfig":"24"},{"size":2540,"mtime":1611695043253,"results":"40","hashOfConfig":"24"},{"size":4938,"mtime":1611691218914,"results":"41","hashOfConfig":"24"},{"size":2071,"mtime":1611693373969,"results":"42","hashOfConfig":"24"},{"size":2203,"mtime":1611694716341,"results":"43","hashOfConfig":"24"},{"size":1983,"mtime":1611694393569,"results":"44","hashOfConfig":"24"},{"size":5995,"mtime":1611693222500,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1hcpm2h",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},"/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/index.js",[],["99","100"],"/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/App.js",["101"],"import { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport AddProject from \"./components/Project/AddProject\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBacklog/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBacklog/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBacklog/ProjectTasks/UpdateProjectTask\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router>\n                <div className=\"App\">\n                    <Header />\n                    <Route exact path=\"/dashboard\" component={Dashboard} />\n                    <Route exact path=\"/addProject\" component={AddProject} />\n                    <Route exact path=\"/updateProject/:id\" component={UpdateProject} />\n                    <Route exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n                    <Route exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n                    <Route exact path=\"/updateProjectTask/:id/:pt_id\" component={UpdateProjectTask} />\n\n                    {/* <Redirect to=\"/dashboard\" /> */}\n                </div>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/reportWebVitals.js",[],"/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/Dashboard.js",[],"/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/Project/ProjectItem.js",["102"],"import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n\n    onDeleteClick(id) {\n        this.props.deleteProject(id);\n    }\n\n    render() {\n        const { project } = this.props;\n\n        return (\n            <div className=\"container\">\n                <div className=\"card card-body bg-light mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\n                        </div>\n                        <div className=\"col-lg-6 col-md-4 col-8\">\n                            <h3>{project.projectName}</h3>\n                            <p>{project.description}</p>\n                        </div>\n                        <div className=\"col-md-4 d-none d-lg-block\">\n                            <ul className=\"list-group\">\n                                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item board\">\n                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                                    </li>\n                                </Link>\n                                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item update\">\n                                        <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                                    </li>\n                                </Link>\n                                <a onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}>\n                                    <li className=\"list-group-item delete\">\n                                        <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                                    </li>\n                                </a>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nProjectItem.propTypes = {\n    deleteProject: PropTypes.func.isRequired\n}\n\nexport default connect(null, { deleteProject })(withRouter(ProjectItem));\n","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/Layout/Header.js",[],"/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/Project/CreateProjectButton.js",[],"/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/Project/AddProject.js",[],"/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/store.js",[],"/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/reducers/index.js",[],"/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/reducers/errorReducer.js",["103"],"import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state=initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n                \n        default:\n            return state;\n    }\n}","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/actions/types.js",[],"/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/actions/projectActions.js",[],"/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/reducers/projectReducer.js",["104"],"import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n    projects: [],\n    project: {}\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_PROJECTS:\n            return { ...state, projects: action.payload };\n\n        case GET_PROJECT:\n            return { ...state, project: action.payload }\n\n        case DELETE_PROJECT:\n            return { ...state, projects: state.projects.filter(project => project.projectIdentifier!== action.payload) }\n\n        default:\n            return state;\n    }\n}",["105","106"],"/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/Project/UpdateProject.js",[],"/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/reducers/backlogReducer.js",["107","108"],"import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\";\n\nconst initialState = {\n    project_tasks: [],\n    project_task: {}\n}\n\nexport default function(state=initialState, action) {\n    switch (action.type) {\n        case GET_BACKLOG:\n            return {\n                ...state,\n                project_tasks: action.payload\n            }\n\n        case GET_PROJECT_TASK:\n            return {\n                ...state,\n                project_task: action.payload\n            }\n\n        case DELETE_PROJECT_TASK:\n            return {\n                ...state,\n                project_tasks: state.project_tasks.filter(project_task => project_task.projectSequence!=action.payload)\n            }\n    \n        default:\n            return state;\n    }\n}","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/ProjectBacklog/ProjectBoard.js",[],"/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/ProjectBacklog/ProjectTasks/AddProjectTask.js",[],"/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/actions/backlogActions.js",[],"/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/ProjectBacklog/Backlog.js",["109","110","111"],"import React, { Component } from 'react'\nimport ProjectTask from './ProjectTasks/ProjectTask'\n\nclass Backlog extends Component {\n    render() {\n        const { project_tasks } = this.props;\n\n        const tasks = project_tasks.map(project_task => (\n            <ProjectTask key={project_task.id} project_task={project_task} onDeleteClicked={this.props.onDeletePT} />\n        ));\n\n\n        let todoItems = [];\n        let inProgressItems = [];\n        let doneItems = [];\n\n        for (let i = 0; i<tasks.length; i++) {\n            if (tasks[i].props.project_task.status == 'TO_DO') {\n                todoItems.push(tasks[i]);\n            }\n\n            if (tasks[i].props.project_task.status == 'IN_PROGRESS') {\n                inProgressItems.push(tasks[i]);\n            }\n\n            if (tasks[i].props.project_task.status == 'DONE') {\n                doneItems.push(tasks[i]);\n            }\n        }\n\n        return (\n            < div className=\"container\" >\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-secondary text-white\">\n                                <h3>TO DO</h3>\n                            </div>\n                        </div>\n                        {todoItems}\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-primary text-white\">\n                                <h3>In Progress</h3>\n                            </div>\n                        </div>\n                        {inProgressItems}\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-success text-white\">\n                                <h3>Done</h3>\n                            </div>\n                        </div>\n                        {doneItems}\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default Backlog;\n","/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/ProjectBacklog/ProjectTasks/ProjectTask.js",[],"/home/workspace/practise/spring_projects/project_managament_tool/ppmtool-react-client/src/components/ProjectBacklog/ProjectTasks/UpdateProjectTask.js",["112"],"import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { getProjectTask, updateProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n\n    constructor(props) {\n        super(props);\n\n        const { id, pt_id } = this.props.match.params;\n\n        this.state = {\n            id: \"\",\n            summary: \"\",\n            projectSequence: pt_id,\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: 0,\n            dueDate: \"\",\n            projectIdentifier: id,\n            createAt: \"\",\n            errors: {}\n        }\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        // const { id, pt_id } = this.props.match.params;\n        this.props.getProjectTask(this.state.projectIdentifier, this.state.projectSequence);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n\n        const {\n            id,\n            summary,\n            projectSequence,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier,\n            createAt,\n        } = nextProps.project_task;\n\n        this.setState({\n            id,\n            summary,\n            projectSequence,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier,\n            createAt,\n        });\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        let updateProjectTask = {\n            id: this.state.id,\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate,\n        }\n\n        const { pt_id } = this.props.match.params;\n\n        this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence, updateProjectTask, this.props.history);\n    }\n\n    render() {\n        const { id } = this.props.match.params;\n        const { errors } = this.props;\n        return (\n            <div className=\"add-PBI\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                                Back to Project Board\n                            </Link>\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" value={this.state.summary} onChange={this.onChange} className={classnames(\"form-control form-control-lg\", { \"is-invalid\": errors.summary })} name=\"summary\" placeholder=\"Project Task summary\" />\n                                    {errors.summary && (<div className=\"invalid-feedback\">{errors.summary}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea className=\"form-control form-control-lg\" value={this.state.acceptanceCriteria} onChange={this.onChange} placeholder=\"Acceptance Criteria\" name=\"acceptanceCriteria\"></textarea>\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\" className=\"form-control form-control-lg\" value={this.state.dueDate} onChange={this.onChange} name=\"dueDate\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\" name=\"priority\" value={this.state.priority} onChange={this.onChange}>\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\" name=\"status\" value={this.state.status} onChange={this.onChange}>\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nUpdateProjectTask.propTypes = {\n    updateProjectTask: PropTypes.func.isRequired,\n    project_task: PropTypes.object.isRequired,\n    errors: PropTypes.object\n}\n\nconst mapStateToProps = state => ({\n    project_task: state.backlog.project_task,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(UpdateProjectTask);\n",{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":42,"nodeType":"119","messageId":"120","endLine":1,"endColumn":50},{"ruleId":"121","severity":1,"message":"122","line":41,"column":33,"nodeType":"123","endLine":41,"endColumn":103},{"ruleId":"124","severity":1,"message":"125","line":5,"column":1,"nodeType":"126","endLine":13,"endColumn":2},{"ruleId":"124","severity":1,"message":"125","line":8,"column":1,"nodeType":"126","endLine":22,"endColumn":2},{"ruleId":"113","replacedBy":"127"},{"ruleId":"115","replacedBy":"128"},{"ruleId":"124","severity":1,"message":"125","line":8,"column":1,"nodeType":"126","endLine":31,"endColumn":2},{"ruleId":"129","severity":1,"message":"130","line":25,"column":103,"nodeType":"131","messageId":"132","endLine":25,"endColumn":105},{"ruleId":"129","severity":1,"message":"133","line":18,"column":52,"nodeType":"131","messageId":"132","endLine":18,"endColumn":54},{"ruleId":"129","severity":1,"message":"133","line":22,"column":52,"nodeType":"131","messageId":"132","endLine":22,"endColumn":54},{"ruleId":"129","severity":1,"message":"133","line":26,"column":52,"nodeType":"131","messageId":"132","endLine":26,"endColumn":54},{"ruleId":"117","severity":1,"message":"134","line":82,"column":17,"nodeType":"119","messageId":"120","endLine":82,"endColumn":22},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["135"],["136"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'pt_id' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]